apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'maven'

def version='1.0.0-RELEASE'
//源代码jdk版本
sourceCompatibility='1.8'

if(project.hasProperty('build.version')){
	version=project.ext['build.version']
}

//gradle build时，指定jar的入口
springBoot{ mainClass='com.hengbao.EurekaService' }

buildscript {
	repositories { maven { url 'http://localhost:8081/nexus/content/groups/public/' } }
	//指定springboot的版本，其它springboot会保持与spring-boot-gradle-plugin的相同
	dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE") }
}

repositories { maven { url 'http://localhost:8081/nexus/content/groups/public/' } }
//编译目录
buildDir = 'build/gradle'

applicationName = "eurekaServer"
archivesBaseName = "eurekaServer"

mainClassName = "com.hengbao.EurekaService"
applicationDefaultJvmArgs = ["-Xms512M", "-Xmx1024M", "-DAPP_HOME=HB_APP_HOME"]

startScripts {
	doLast {
		unixScript.text = unixScript.text.replace('HB_APP_HOME', '\$APP_HOME')
		windowsScript.text = windowsScript.text.replace('HB_APP_HOME', '%~dp0..')
		unixScript.text = unixScript.text.replaceAll('\\nCLASSPATH=.*', java.util.regex.Matcher.quoteReplacement('\nCLASSPATH=\$APP_HOME/conf:\$APP_HOME/lib/*'))
		windowsScript.text = windowsScript.text.replaceAll('\\nset CLASSPATH=.*', java.util.regex.Matcher.quoteReplacement('\nset CLASSPATH=%APP_HOME%\\conf;%APP_HOME%\\lib\\*'))
	}
}

applicationDistribution.into("conf") {
	from('src/main/resources'){
		include "application.yml"
		include "application-alone.yml"
		include "application-cluster.yml"
		include "logback.xml"
	}
}

def baseName ="eurekaServer"

configurations{
	providedRuntime
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-logging")
	compile("org.springframework.cloud:spring-cloud-starter-eureka-server:1.1.5+")
	compile("org.springframework.cloud:spring-cloud-starter-eureka:1.1.5+")
	compile("org.springframework.boot:spring-boot-starter-actuator")
	
	compile("com.google.guava:guava:18.0+")
	compile("org.roboguice:roboguice:2.0+")
	compile("com.netflix.servo:servo-core:0.12+")

	testCompile("org.springframework.boot:spring-boot-starter-test")
}

////////////////////////// 以下为打包内容 //////////////////////////////

jar{
	manifest{
		attributes("Manifest-Version" : version,
		"Implementation-Title": baseName,
		"Implementation-Vendor": "Hengbao Inc.",
		"Implementation-Version": version
		)
	}
}

distTar {
    archiveName baseName + '-' + version + '.tar'
}

task dist {
	dependsOn distTar
}

//中文字符集设置
[compileJava, javadoc, compileTestJava]*.options*.encoding = 'UTF-8'